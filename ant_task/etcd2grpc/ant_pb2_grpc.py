# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ant_task.etcd2grpc import ant_pb2 as ant__pb2


class AntRpcServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.run = channel.unary_unary(
            '/AntRpcServer/run',
            request_serializer=ant__pb2.AntRequest.SerializeToString,
            response_deserializer=ant__pb2.AntResponse.FromString,
        )


class AntRpcServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def run(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AntRpcServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'run': grpc.unary_unary_rpc_method_handler(
            servicer.run,
            request_deserializer=ant__pb2.AntRequest.FromString,
            response_serializer=ant__pb2.AntResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'AntRpcServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class AntRpcServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def run(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AntRpcServer/run',
                                             ant__pb2.AntRequest.SerializeToString,
                                             ant__pb2.AntResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
